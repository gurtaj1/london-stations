// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`features.home Home should render without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home
    history={
      Object {
        "push": [MockFunction],
      }
    }
    home={
      Object {
        "homeData": Array [
          Object {
            "name": "station-name",
            "tubeLines": Array [
              "circle",
              "district",
            ],
          },
        ],
        "isFetching": false,
      }
    }
    requestHomePage={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Station
          name="station-name"
          tubeLines={
            Array [
              "circle",
              "district",
            ]
          }
        />,
      ],
      "className": "home",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "station-name",
        "nodeType": "function",
        "props": Object {
          "name": "station-name",
          "tubeLines": Array [
            "circle",
            "district",
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Station
            name="station-name"
            tubeLines={
              Array [
                "circle",
                "district",
              ]
            }
          />,
        ],
        "className": "home",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "station-name",
          "nodeType": "function",
          "props": Object {
            "name": "station-name",
            "tubeLines": Array [
              "circle",
              "district",
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
